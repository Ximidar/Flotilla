// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CommRelay.proto

package CommRelayStructures

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Line will define a raw GCODE line with a number attached
type Line struct {
	Line                 string   `protobuf:"bytes,1,opt,name=Line,proto3" json:"Line,omitempty"`
	LineNumber           uint64   `protobuf:"varint,2,opt,name=LineNumber,proto3" json:"LineNumber,omitempty"`
	KnownNumber          bool     `protobuf:"varint,3,opt,name=KnownNumber,proto3" json:"KnownNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Line) Reset()         { *m = Line{} }
func (m *Line) String() string { return proto.CompactTextString(m) }
func (*Line) ProtoMessage()    {}
func (*Line) Descriptor() ([]byte, []int) {
	return fileDescriptor_645f51969b46a11e, []int{0}
}

func (m *Line) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Line.Unmarshal(m, b)
}
func (m *Line) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Line.Marshal(b, m, deterministic)
}
func (m *Line) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Line.Merge(m, src)
}
func (m *Line) XXX_Size() int {
	return xxx_messageInfo_Line.Size(m)
}
func (m *Line) XXX_DiscardUnknown() {
	xxx_messageInfo_Line.DiscardUnknown(m)
}

var xxx_messageInfo_Line proto.InternalMessageInfo

func (m *Line) GetLine() string {
	if m != nil {
		return m.Line
	}
	return ""
}

func (m *Line) GetLineNumber() uint64 {
	if m != nil {
		return m.LineNumber
	}
	return 0
}

func (m *Line) GetKnownNumber() bool {
	if m != nil {
		return m.KnownNumber
	}
	return false
}

type RequestLines struct {
	Amount               int32    `protobuf:"varint,1,opt,name=Amount,proto3" json:"Amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestLines) Reset()         { *m = RequestLines{} }
func (m *RequestLines) String() string { return proto.CompactTextString(m) }
func (*RequestLines) ProtoMessage()    {}
func (*RequestLines) Descriptor() ([]byte, []int) {
	return fileDescriptor_645f51969b46a11e, []int{1}
}

func (m *RequestLines) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestLines.Unmarshal(m, b)
}
func (m *RequestLines) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestLines.Marshal(b, m, deterministic)
}
func (m *RequestLines) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestLines.Merge(m, src)
}
func (m *RequestLines) XXX_Size() int {
	return xxx_messageInfo_RequestLines.Size(m)
}
func (m *RequestLines) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestLines.DiscardUnknown(m)
}

var xxx_messageInfo_RequestLines proto.InternalMessageInfo

func (m *RequestLines) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type ReturnLines struct {
	Lines                []*Line  `protobuf:"bytes,1,rep,name=Lines,proto3" json:"Lines,omitempty"`
	EOF                  bool     `protobuf:"varint,2,opt,name=EOF,proto3" json:"EOF,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnLines) Reset()         { *m = ReturnLines{} }
func (m *ReturnLines) String() string { return proto.CompactTextString(m) }
func (*ReturnLines) ProtoMessage()    {}
func (*ReturnLines) Descriptor() ([]byte, []int) {
	return fileDescriptor_645f51969b46a11e, []int{2}
}

func (m *ReturnLines) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReturnLines.Unmarshal(m, b)
}
func (m *ReturnLines) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReturnLines.Marshal(b, m, deterministic)
}
func (m *ReturnLines) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnLines.Merge(m, src)
}
func (m *ReturnLines) XXX_Size() int {
	return xxx_messageInfo_ReturnLines.Size(m)
}
func (m *ReturnLines) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnLines.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnLines proto.InternalMessageInfo

func (m *ReturnLines) GetLines() []*Line {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *ReturnLines) GetEOF() bool {
	if m != nil {
		return m.EOF
	}
	return false
}

func init() {
	proto.RegisterType((*Line)(nil), "CommRelayStructures.Line")
	proto.RegisterType((*RequestLines)(nil), "CommRelayStructures.RequestLines")
	proto.RegisterType((*ReturnLines)(nil), "CommRelayStructures.ReturnLines")
}

func init() { proto.RegisterFile("CommRelay.proto", fileDescriptor_645f51969b46a11e) }

var fileDescriptor_645f51969b46a11e = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x77, 0xce, 0xcf, 0xcd,
	0x0d, 0x4a, 0xcd, 0x49, 0xac, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x86, 0x0b, 0x04,
	0x97, 0x14, 0x95, 0x26, 0x97, 0x94, 0x16, 0xa5, 0x16, 0x2b, 0xc5, 0x70, 0xb1, 0xf8, 0x64, 0xe6,
	0xa5, 0x0a, 0x09, 0x41, 0x68, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x88, 0x98, 0x1c, 0x17,
	0x17, 0x88, 0xf6, 0x2b, 0xcd, 0x4d, 0x4a, 0x2d, 0x92, 0x60, 0x52, 0x60, 0xd4, 0x60, 0x09, 0x42,
	0x12, 0x11, 0x52, 0xe0, 0xe2, 0xf6, 0xce, 0xcb, 0x2f, 0xcf, 0x83, 0x2a, 0x60, 0x56, 0x60, 0xd4,
	0xe0, 0x08, 0x42, 0x16, 0x52, 0x52, 0xe3, 0xe2, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x01,
	0x69, 0x2b, 0x16, 0x12, 0xe3, 0x62, 0x73, 0xcc, 0xcd, 0x2f, 0xcd, 0x2b, 0x01, 0xdb, 0xc3, 0x1a,
	0x04, 0xe5, 0x29, 0x05, 0x70, 0x71, 0x07, 0xa5, 0x96, 0x94, 0x16, 0xe5, 0x41, 0x94, 0xe9, 0x73,
	0xb1, 0x82, 0x19, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46, 0x92, 0x7a, 0x58, 0x5c, 0xae, 0x07,
	0x52, 0x11, 0x04, 0x51, 0x27, 0x24, 0xc0, 0xc5, 0xec, 0xea, 0xef, 0x06, 0x76, 0x22, 0x47, 0x10,
	0x88, 0x99, 0xc4, 0x06, 0xf6, 0xb3, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x7d, 0x2a, 0xa1,
	0x06, 0x01, 0x00, 0x00,
}
